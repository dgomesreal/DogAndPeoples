// <auto-generated />
using DogAndPeoples.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DogAndPeoples.Migrations
{
    [DbContext(typeof(DogAndPeoplesContext))]
    partial class DogAndPeoplesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DogAndPeoples.Models.Dog", b =>
                {
                    b.Property<int>("DogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DogBreed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DogName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeopleId")
                        .HasColumnType("int");

                    b.HasKey("DogID");

                    b.HasIndex("PeopleId")
                        .IsUnique();

                    b.ToTable("Dogs");
                });

            modelBuilder.Entity("DogAndPeoples.Models.People", b =>
                {
                    b.Property<int>("PeopleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PeopleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeopleID");

                    b.ToTable("Peoples");
                });

            modelBuilder.Entity("DogAndPeoples.Models.Dog", b =>
                {
                    b.HasOne("DogAndPeoples.Models.People", "People")
                        .WithOne("Dog")
                        .HasForeignKey("DogAndPeoples.Models.Dog", "PeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("People");
                });

            modelBuilder.Entity("DogAndPeoples.Models.People", b =>
                {
                    b.Navigation("Dog");
                });
#pragma warning restore 612, 618
        }
    }
}
